<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		"
>
    <!--
        todo 现在还没有搞懂 为什么单纯的springmvc项目  使用service就要引用applicationContext.xml,不引用就不能自动注入service方法
    -->
    <!--spring 扫描包  (去除controller层==springmvc自己实现)-->
    <context:component-scan base-package="com.maben">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--aspectj代理 默认只是代理接口-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--spring事务-->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    <!--配置事务-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--配置DataSource-->
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName">
            <value>com.mysql.jdbc.Driver</value>
        </property>
        <property name="url">
            <value>jdbc:mysql://localhost:3306/arch1?useUnicode=true&amp;characterEncoding=UTF-8</value>
        </property>
        <property name="username">
            <value>root</value>
        </property>
        <property name="password" value="maben123"/>
    </bean>
    <!--mybatis自己的配置-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--使用的DataSource-->
        <property name="dataSource" ref="dataSource"/>
        <!--使用的配置文件-->
        <property name="configLocation" value="classpath:MybatisConf.xml"/>
        <!--扫描的mapper.xml-->
        <property name="mapperLocations" value="classpath:mapper/**/*Mapper.xml"/>
    </bean>
    <!--mybatis扫描配置-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描包路径-->
        <property name="basePackage" value="com.maben"/>
        <!--加上这个之后就是说必须在满足在扫描包路径下,并且配备注解@Repository才会自动找mapper.xml的SQL===方便自己写实现类-->
        <property name="annotationClass" value="org.springframework.stereotype.Repository"></property>
    </bean>
</beans>
